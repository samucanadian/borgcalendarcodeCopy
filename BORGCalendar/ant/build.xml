<?xml version="1.0"?>
<!-- $Id$ -->
<project name="borg-calendar" xmlns:ivy="antlib:org.apache.ivy.ant" default="main" basedir="../..">

	<property name="prj.dir" value="${basedir}/BORGCalendar" />
	<property name="help.dir" value="${prj.dir}/borghelp" />

	<property name="pkg" value="net/sf/borg" />

	<property name="build.dir" value="${prj.dir}/build" />
	<property name="dist.dir" value="${prj.dir}/dist" />
	<property name="doc.dir" value="${prj.dir}/docs" />

	<property name="res.dir" value="${prj.dir}/res/resource" />
	<property name="macos.res.dir" value="${prj.dir}/res/MacOS" />

	<property name="build.compiler" value="modern" />
	<property name="ant.dir" value="${prj.dir}/ant" />

	<property file="${ant.dir}/borg.version" />

	<!-- PATH to javahelp - must be changed only if you want to regen the help indexes -->
	<condition property="jh.bin" value="c:/jh2.0/javahelp/bin" else="/apps/jh2.0/javahelp/bin">
		<os family="windows" />
	</condition>
	<condition property="jhindexer" value="jhindexer.bat" else="jhindexer">
		<os family="windows" />
	</condition>

	<available file="${jh.bin}" property="have.jh" />

	<!-- PATH to IzPack dir to create the installer -->

	<condition property="iz.dir" value="/Applications/IzPack">
		<os family="mac" />
	</condition>

	<condition property="iz.dir" value="/apps/IzPack">
		<os family="unix" />
	</condition>

	<condition property="iz.dir" value="c:/Program Files/IzPack">
		<os family="windows" />
	</condition>


	<available file="${iz.dir}" property="have.izpack" />

	<available file="${ant.dir}/lib/jarbundler.jar" property="have.jarbundler" />

	<!-- Path References -->
	<path id="build.classpath">
		<fileset dir="${prj.dir}/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="resolve" description="--> retrieve dependencies with ivy">
		<property name="ivy.dep.file" value="${prj.dir}/ant/ivy.xml" />
		<property name="ivy.lib.dir" value="${prj.dir}/lib" />
		<ivy:retrieve type="jar" />
	</target>

	<target name="javadoc">
		<tstamp />
		<taskdef classname="lombok.delombok.ant.DelombokTask" classpath="${prj.dir}/lib/lombok-0.10.6.jar" name="delombok" />
		<mkdir dir="${prj.dir}/build/src-delomboked" />
		<delombok verbose="true" encoding="UTF-8" to="${prj.dir}/build/src-delomboked" from="${prj.dir}/src" />
		<property name="javadoc.bottom" value="Generated ${TODAY} by ${user.name} using ${ant.version} and Java version ${java.version} from ${java.vendor} on ${os.name} ${os.arch} ${os.version}" />
		<javadoc destdir="${prj.dir}/docs" use="true" Windowtitle="Borg Javadocs" Doctitle="Borg Javadocs" bottom="${javadoc.bottom}" package="true" sourcepath="${prj.dir}/build/src-delomboked" classpathref="build.classpath" packagenames="*" excludepackagenames="test" maxmemory="512m" useexternalfile="yes" source="1.6">
			<link href="http://docs.oracle.com/javase/6/docs/api/" />
		</javadoc>
	</target>

	<target name="init">
		<tstamp />
		<condition property="iz.dir.found" value="IzPack installation found at: ${iz.dir}" else="IzPack installation not found.">
			<available file="${iz.dir}" />
		</condition>
		<echo message="${iz.dir.found}" />
	</target>

	<!-- regen help search indexes -->
	<target name="regen-help" if="have.jh">
		<exec dir="${help.dir}" executable="${jh.bin}/${jhindexer}">
			<arg value="default" />
		</exec>
	</target>

	<!-- do a staged, package by package compile to restrict dependencies across packages
	     this is a quick way accomplish this without resorting to multiple eclipse projects -->
	<target name="compile">
		<mkdir dir="${build.dir}" />
		<javac includeantruntime="no" sourcepath="" srcdir="${prj.dir}/src" includes="${pkg}/common/**" excludes="${pkg}/model/**,${pkg}/ui/**,${pkg}/control/**" destdir="${build.dir}" classpathref="build.classpath" target="1.6" source="1.6" debug="on" />
		<javac includeantruntime="no" sourcepath="" srcdir="${prj.dir}/src" includes="${pkg}/model/**" excludes="${pkg}/ui/**,${pkg}/control/**" destdir="${build.dir}" classpathref="build.classpath" target="1.6" source="1.6" debug="on" />
		<javac includeantruntime="no" sourcepath="" srcdir="${prj.dir}/src" includes="${pkg}/ui/**" excludes="${pkg}/control/**" destdir="${build.dir}" classpathref="build.classpath" target="1.6" source="1.6" debug="on" />
		<javac includeantruntime="no" srcdir="${prj.dir}/src" includes="${pkg}/control/**" excludes="${pkg}/common/**,${pkg}/model/**,${pkg}/ui/**" destdir="${build.dir}" classpathref="build.classpath" target="1.6" source="1.6" debug="on" />

	</target>

	<target name="borg-jar" depends="compile">
		<mkdir dir="${dist.dir}" />
		<tstamp>
			<format property="build.time" pattern="MM/dd/yyyy hh:mm aa" />
		</tstamp>
		<echo file="${build.dir}/properties" append="false">build.time=${build.time}
</echo>
		<concat destfile="${build.dir}/properties" append="true">
			<filelist dir="${ant.dir}" files="borg.version" />
		</concat>

		<pathconvert property="generated.manifest.classpath" pathsep=" ">
			<path refid="build.classpath" />
			<chainedmapper>
				<flattenmapper />
				<globmapper from="*" to="lib/*" />
			</chainedmapper>
		</pathconvert>
		<echo message="computed classpath: '${generated.manifest.classpath}'" />

		<manifest file="${build.dir}/${pkg}/MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}" />
			<attribute name="Main-Class" value="${pkg}/control/Borg" />
			<attribute name="Class-Path" value="${generated.manifest.classpath} lib/borghelp.jar" />
		</manifest>

		<copy todir="${build.dir}/resource">
			<fileset dir="${res.dir}" includes="*" />
		</copy>

		<copy todir="${build.dir}/resource">
			<fileset dir="${prj.dir}/installer">
				<include name="RELEASE_NOTES.txt" />
				<include name="run_borg.sh" />
			</fileset>
		</copy>

		<jar jarfile="${dist.dir}/borg.jar" manifest="${build.dir}/${pkg}/MANIFEST.MF">
			<fileset dir="${build.dir}">
				<include name="properties" />
				<include name="resource/*" />
				<include name="reports/*" />
				<include name="**/*.class" />
			</fileset>
		</jar>
	</target>

	<target name="help-jar">
		<mkdir dir="${build.dir}/lib" />
		<jar jarfile="${build.dir}/lib/borghelp.jar">
			<fileset dir="${help.dir}">
				<include name="**" />
			</fileset>
		</jar>
	</target>

	<target name="borg_src" depends="clean-build">
		<zip destfile="${dist.dir}/borg_src.zip">
			<zipfileset dir="${basedir}" prefix="borg_src">
				<include name="BORGCalendar/**" />
				<exclude name="**/.metadata/**/*" />
				<exclude name="**/build/**" />
				<exclude name="**/classes/**" />
				<exclude name="**/dist/**" />
				<exclude name="**/requirements/**" />
			</zipfileset>
			<zipfileset dir="${build.dir}/resource">
				<include name="COPYING" />
				<include name="*.txt" />
			</zipfileset>
		</zip>
	</target>

	<target name="borg_prog" depends="clean-build">
		<zip destfile="${dist.dir}/borg.zip">
			<fileset dir="${dist.dir}" includes="*.jar" />
			<fileset dir="${build.dir}/resource" includes="COPYING" />
			<fileset dir="${build.dir}/resource" includes="license.htm" />
			<fileset dir="${build.dir}" includes="lib/borghelp.jar" />
			<fileset dir="${res.dir}" includes="borg_mysql.sql" />
			<fileset dir="${res.dir}" includes="borg_hsqldb.sql" />
			<fileset dir="${prj.dir}" includes="lib/*" excludes="lib/lombok*"/>
			<fileset dir="${prj.dir}" includes="lib/ext/*" />
			<fileset dir="${help.dir}/default" includes="db.html" />
		</zip>
	</target>

	<target name="installer" if="have.izpack">
		<taskdef name="izpack" classpath="${iz.dir}/lib/standalone-compiler.jar" classname="com.izforge.izpack.ant.IzPackTask" />
		<mkdir dir="${build.dir}/installer" />
		<unzip src="${dist.dir}/borg.zip" dest="${build.dir}/installer" />
		<copy file="${dist.dir}/borg_src.zip" todir="${build.dir}/installer" />
		<copy file="${prj.dir}/res/resource/borg.jpg" todir="${build.dir}/installer" />
		<copy file="${iz.dir}/bin/native/izpack/ShellLink.dll" todir="${build.dir}/installer" />
		<copy todir="${build.dir}/installer">
			<fileset dir="${prj.dir}/installer" includes="*" />
		</copy>
		<izpack input="${build.dir}/installer/install.xml" inheritAll="true" output="${build.dir}/installer/BORG_installer-${borg.version}.jar" installerType="standard" basedir="${build.dir}/installer" izPackDir="${iz.dir}/" />

		<copy todir="${dist.dir}" file="${build.dir}/installer/BORG_installer-${borg.version}.jar" />

		<copy todir="${dist.dir}" file="${iz.dir}/utils/wrappers/izpack2exe/7zS.sfx" />

		<exec osfamily="windows" dir="${dist.dir}" executable="c:/Python32/python">
			<arg value="${iz.dir}/utils/wrappers/izpack2exe/izpack2exe.py" />
			<arg value="--with-7z=${iz.dir}/utils/wrappers/izpack2exe/7za.exe" />
			<arg value="--file=${dist.dir}/BORG_installer-${borg.version}.jar" />
			<arg value="--output=${dist.dir}/BORG_installer-${borg.version}.exe" />
			<arg value="--no-upx" />
		</exec>

		<exec osfamily="unix" dir="${dist.dir}" executable="python">
			<arg value="${iz.dir}/utils/wrappers/izpack2exe/izpack2exe.py" />
			<arg value="--with-7z=7z" />
			<arg value="--file=${dist.dir}/BORG_installer-${borg.version}.jar" />
			<arg value="--output=${dist.dir}/BORG_installer-${borg.version}.exe" />
			<arg value="--no-upx" />
		</exec>

	</target>

	<!-- 
	To create a Mac OS application bundle using "JarBundler", go fetch JarBundler from http://www.informagen.com/JarBundler/
	and place jarbundler.jar into BORGCalendar/ant/lib (create the lib folder if it does not exist)
	then run the main task. There will be a Borg-xxx.macos-app.tar.gz in the target folder.
	-->
	<target name="installer.jarbundler" depends="borg-jar" if="have.jarbundler">
		<taskdef name="jarbundler" classpath="${ant.dir}/lib/jarbundler.jar" classname="net.sourceforge.jarbundler.JarBundler" />
		<mkdir dir="${build.dir}/macos" />
		<jarbundler dir="${build.dir}/macos" name="Borg" mainclass="net.sf.borg.control.Borg" bundleid="net.sf.borg" icon="${macos.res.dir}/borg.icns" infostring="BORG Calendar" jvmversion="1.6+" shortname="Borg" signature="BORG" verbose="true" version="${borg.version}">
			<jarfileset dir="${dist.dir}">
				<include name="borg.jar" />
			</jarfileset>
			<javafileset dir="${prj.dir}">
				<include name="lib/*.jar" />
			</javafileset>
		</jarbundler>

		<tar destfile="${dist.dir}/Borg-${borg.version}.macos-app.tar.gz" compression="gzip">
			<tarfileset dir="${build.dir}/macos">
				<include name="**/**" />
			</tarfileset>
			<tarfileset dir="${build.dir}/macos" filemode="755">
				<include name="Borg.app/Contents/MacOS/**" />
			</tarfileset>
		</tar>

	</target>

	<!-- Clean everything -->
	<target name="clean" depends="init" description="Clean everything.">
		<delete quiet="true" dir="${build.dir}" />
		<delete quiet="true" dir="${dist.dir}" />
		<delete quiet="true" dir="${doc.dir}" />
		<delete quiet="true" dir="${borg.prog.dir}" />
	</target>

	<target name="clean-build" depends="clean,borg-jar,help-jar" />
	<target name="main" depends="regen-help,fulldist,installer,installer.jarbundler" description="does everything." />
	<target name="fulldist" depends="borg_prog,borg_src" />


</project>
